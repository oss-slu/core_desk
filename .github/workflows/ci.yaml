name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Install Dependencies
        working-directory: ./api
        run: yarn install

      - name: Run Integration Tests
        working-directory: ./api
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/sluop-test
          JWT_SECRET: TEST_JWT_SECRET
          BASE_URL: "http://localhost:5173"
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: nyc3
          AWS_BUCKET: open-project
          AWS_ENDPOINT: https://nyc3.digitaloceanspaces.com
          PROJECT_NAME: ci-environment
        run: yarn test --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install backend Dependencies
        working-directory: ./api
        run: yarn install

      - name: Run backend lint
        working-directory: ./api
        run: yarn lint

  lint-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install frontend Dependencies
        working-directory: ./app
        run: yarn install

      - name: Run frontend lint
        working-directory: ./app
        run: yarn lint

  docker:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint-api
      - lint-app
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare build metadata
        shell: bash
        run: |
          echo "VITE_BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_ENV"
          echo "VITE_HASH=${GITHUB_SHA::7}" >> "$GITHUB_ENV"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: jackcranee/sluopenproject-oss:0.0.1
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            VITE_BUILD_DATE=${{ env.VITE_BUILD_DATE }}
            VITE_HASH=${{ env.VITE_HASH }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to DigitalOcean
        uses: digitalocean/app_action/deploy@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
          app_name: slu-open-project
          print_build_logs: true
          print_deploy_logs: true

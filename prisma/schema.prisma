// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        String @id @default(cuid())
  email     String @unique
  firstName String
  lastName  String

  logs  logs[]
  shops UserShop[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model logs {
  id      String  @id @default(cuid())
  type    LogType
  message String?
  from String? @db.MediumText
  to String? @db.MediumText

  user   user?   @relation(fields: [userId], references: [id])
  userId String?

  shop   Shop?   @relation(fields: [shopId], references: [id])
  shopId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum LogType {
  USER_LOGIN
  USER_CREATED
  SHOP_CREATED
}

model UserShop {
  id     String @id @default(cuid())
  user   user   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  shop   Shop   @relation(fields: [shopId], references: [id], onDelete: Cascade)
  shopId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shop {
  id          String  @id @default(cuid())
  name        String
  address     String?
  phone       String?
  email       String?
  website     String?
  description String?
  imageUrl    String?

  logs  logs[]
  users UserShop[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
